// declaration of cloud data
global totalBirds : CInt;

Index BirdList[name: String] {
  amountSpotted: CInt;
}

Table BirdWatcher[] {
  name: CString;
}

// operations representing user actions
function createBirdWatcher(name: String) {
  var birdwatcher = new BirdWatcher();
  birdwatcher.name = name;
  return birdwatcher;
}

function deleteBirdWatcher(birdwatcher: BirdWatcher) {
  //all entries in other tables that has this birdwatcher as key value, will also be deleted
  delete birdwatcher;
}

function spotBird(name: String, amount: Int) {
  totalBirds.add(count);
  BirdList[name].amountSpotted.add(amount);
}

function unspotBird(name: String, amount: Int) {
  totalBirds.add(- amount);
  BirdList[name].amountSpotted.add(- amount);
}

function display() {
  foreach b in entries BirdList.amountSpotted {
    print(b.amountSpotted.get() + " " + b.name);
  }
  print(totalBirds.get() + " total");
}

// main event loop
function main() {
    // allow send/receive of updates
    yield();

    match (NextUserCommand()) with {
      spot s n:
        spotBird(s, n);
      unspot s n:
        unspotBird(s, n);
      display:
        display();
      quit:
    } 
}